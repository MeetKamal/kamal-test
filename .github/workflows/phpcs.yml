name: CI

on:
  # Compare the preceeding commit -> to the current commit of the main branch.
  # (Note: To compare changes between the current commit to the last pushed remote commit of the main branch set `since_last_remote_commit: true`)
  push:
    branches:
      - main
  # Compare the last commit of main -> to the current commit of a PR branch.
  # (Note: To compare changes between the current commit to the last pushed remote commit of a PR branch set `since_last_remote_commit: true`)
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # windows-latest | macos-latest
    name: Test changed-files
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: project # OR "2" -> To retrieve the preceding commit.

      - name: Create Standard Directory
        shell: bash
        run: mkdir demo

      - name: Install Coding Standard
        shell: bash
        working-directory: project
        run: |
          composer require "magento/magento-coding-standard"
          composer config --no-plugins allow-plugins.digitalrevolution/php-codesniffer-baseline true
          composer require --dev "digitalrevolution/php-codesniffer-baseline"

      - name: Register Coding Standard
        shell: bash
        working-directory: project
        run: vendor/bin/phpcs --config-set installed_paths ${{ github.workspace }}/demo/vendor/magento/magento-coding-standard,${{ github.workspace }}/demo/vendor/phpcompatibility/php-compatibility

      - name: Get changed files
        shell: bash
        working-directory: project
        id: changed-new-files
        run: |
          if ${{ github.event_name == 'pull_request' }}; then
            echo "changed_files=$(git diff --name-only -r HEAD^1 HEAD | xargs)" >> $GITHUB_OUTPUT
          else
            echo "changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | xargs)" >> $GITHUB_OUTPUT
          fi

      - name: List out changed files
        shell: bash
        working-directory: project
        id: previous-commit-files
        run: |
          if ${{ github.event_name == 'pull_request' }}; then
            git checkout ${{ github.event.pull_request.base.ref }}
          else
            git checkout ${{ github.event.before }}
          fi

          for file in ${{ steps.changed-new-files.outputs.changed_files }}; do
            cat $file
            echo $file >> ${{ github.workspace }}/file_lists_old.txt
          done      

      - name: List out files and Run
        shell: bash
        id: phpcs_before
        working-directory: project
        run: |
          grep -i "\.php$" ${{ github.workspace }}/file_lists_old.txt > ${{ github.workspace }}/files_php_old.txt
          echo "$(vendor/bin/phpcs --standard=PSR2 --report-file="phpcs.baseline.xml" --report=\\DR\\CodeSnifferBaseline\\Reports\\Baseline --file-list=${{ github.workspace }}/files_php_old.txt)" > phpcs.baseline.xml          
          cat phpcs.baseline.xml

      - name: List out changed files
        shell: bash
        working-directory: project
        id: latest-files
        run: |
          if ${{ github.event_name == 'pull_request' }}; then
            git checkout ${{ github.event.pull_request.head.ref }}
          else
            git checkout ${{ github.event.after }}
          fi

          for file in ${{ steps.changed-new-files.outputs.changed_files }}; do
            echo $file >> ${{ github.workspace }}/file_lists_new.txt
          done

      - name: List out files and Run
        shell: bash
        id: phpcs_after
        working-directory: project
        run: |
          echo "456"
          grep -i "\.php$" ${{ github.workspace }}/file_lists_new.txt > ${{ github.workspace }}/file_php_new.txt
          echo "$(vendor/bin/phpcs --standard=PSR2 --report-file="phpcs.baseline.xml" --report=\\DR\\CodeSnifferBaseline\\Reports\\Baseline --file-list=${{ github.workspace }}/file_php_new.txt)" > phpcs.baseline.xml          
          cat phpcs.baseline.xml        
      


  

